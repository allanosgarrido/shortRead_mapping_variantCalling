import os
from collections import defaultdict
import sys
import yaml
sys.path.append(os.getcwd())
import helperFun

configfile: "config.yaml"
res_config = yaml.load(open("resources.yaml"))

# rename variables from config file for downstream simplicity
ref = config["ref"]
bam_suffix = config["bam_suffix"]

# this is where Snakemake output will go, specify with 'gatkDir' in config.yml
gatkDir = config["gatkDir"]
bamDir = config["bamsForGatk"] 
gvcfDir = gatkDir + config["gvcfDir"]
dbDir = gatkDir + config["dbDir"]
vcfDir = gatkDir + config["vcfDir_gatk"]
listDir = gatkDir + config["listDir"]
maxIntervalLen = int(config["maxIntervalLen"])
maxBpPerList = int(config["maxBpPerList"])
maxIntervalsPerList = int(config["maxIntervalsPerList"])
minNmer = config["minNmer"]

refBaseName = helperFun.getRefBaseName(config["ref"])

# grab all samples for R1 to get list of names, no need to look at R2 which should have identical names
#SAMPLES = ["ERR1013163"]
SAMPLES = helperFun.getBamSampleNames(bamDir, bam_suffix)


if not os.path.isdir(config["gatkDir"]):
    os.system("mkdir " + config["gatkDir"])
if not os.path.isdir(listDir):
    os.system("mkdir " + listDir)
LISTS = helperFun.createListsGetIndices(listDir, maxIntervalLen, maxBpPerList, maxIntervalsPerList, minNmer, ref, refBaseName, config["gatkDir"])
lastList = len(LISTS)-1

# this directory needs to be made beforehand since it is specified within GATK, which doesn't automatically make directories
os.system("mkdir -p " + dbDir + "tmp")
os.system("mkdir -p " + vcfDir + "tmp")
# we need to create some map files for GenomicsDBImport that contain partition gVCFs by list index 
helperFun.makeMapFilesForGenomicsDBImport(SAMPLES, LISTS, dbDir, gvcfDir)


### workflow ###

rule all:
    input:
        missing = config["gatkDir"] + "missing_data_per_ind.txt",
        SNPsPerInt = config["gatkDir"] + "SNP_per_interval.txt"

include: "rules/bam2vcf_gatk.smk"




