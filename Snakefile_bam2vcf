import os
from collections import defaultdict
import sys
sys.path.append(os.getcwd())
import helperFun

configfile: "config.yaml"
CLUSTER = json.load(open(config['CLUSTER_JSON']))

# rename variables from config file for downstream simplicity
ref = config["ref"]
fastq_suffix1 = config["fastq_suffix1"]
fastq_suffix2 = config["fastq_suffix2"]
fastqDir = config["fastqDir"]

# this is where Snakemake output will go, specify with baseDir in config.yml
bamDir = config["baseDir"] + config["bamDir"]
gvcfDir = config["baseDir"] + config["gvcfDir"]
dbDir = config["baseDir"] + config["dbDir"]
vcfDir = config["baseDir"] + config["vcfDir"]
listDir = config["listDir"]
maxIntervalLen = int(config["maxIntervalLen"])
maxBpPerList = int(config["maxBpPerList"])
maxIntervalsPerList = int(config["maxIntervalsPerList"])
minNmer = config["minNmer"]

refBaseName = helperFun.getRefBaseName(config["ref"])

# grab all samples for R1 to get list of names, no need to look at R2 which should have identical names
#SAMPLES = ["ERR1013163"]
SAMPLES = helperFun.getSampleNames(fastqDir, fastq_suffix1)


if not os.path.isdir(listDir):
    os.system("mkdir " + listDir)
LISTS = helperFun.createListsGetIndices(listDir, maxIntervalLen, maxBpPerList, maxIntervalsPerList, minNmer, ref, refBaseName)
lastList = len(LISTS)-1

# this directory needs to be made beforehand since it is specified within GATK, which doesn't automatically make directories
os.system("mkdir -p " + dbDir + "tmp")
os.system("mkdir -p " + vcfDir + "tmp")
# we need to create some map files for GenomicsDBImport that contain partition gVCFs by list index 
helperFun.makeMapFilesForGenomicsDBImport(SAMPLES, LISTS, dbDir, gvcfDir)


### workflow ###

rule all:
    input:
        missing = "missing_data_per_ind.txt",
        SNPsPerInt = "SNP_per_interval.txt"

include: "rules/bam2vcf.smk"




